# This is a makefle to build libpd.so from vanilla Pd sources.  You can run
# this in a separate directory:
# mkdir ../foo
# cd ../foo
# make -f ../src/makefie.libpd

VPATH = ../src:\
../extra/bob~:../extra/bonk~:../extra/choice:../extra/fiddle~:../extra/loop~:\
../extra/lrshift~:../extra/pd~:../extra/pique:../extra/sigmund~:../extra/stdout

# The C flags are separated into CPPFLAGS, CODECFLAGS, and MORECFLAGS
# to allow easy overriding of CODECFLAGS and to allow adding MORECFLAGS:

# C preprocessor flags, and flags controlling errors and warnings
CPPFLAGS = -I../src -DPD -DHAVE_UNISTD_H -DUSEAPI_DUMMY -DLIBPD_EXTRA \
    -DPDINSTANCE

# code generation flags (e.g., optimization).
CODECFLAGS = -fPIC -ffast-math -funroll-loops -fomit-frame-pointer -O3

# anything else you want to specify.
MORECFLAGS =

# flags for linker
LDFLAGS =

# and another variable you can override to add more (like "-g").
MORELDFLAGS =

CFLAGS = $(CPPFLAGS) $(CODECFLAGS) $(MORECFLAGS)

PDSRC = g_canvas.c g_graph.c g_text.c g_rtext.c g_array.c g_template.c g_io.c \
    g_scalar.c g_traversal.c g_guiconnect.c g_readwrite.c g_editor.c g_clone.c \
    g_all_guis.c g_bang.c g_hdial.c g_hslider.c g_mycanvas.c g_numbox.c \
    g_toggle.c g_undo.c g_vdial.c g_vslider.c g_vumeter.c \
    g_editor_extras.c \
    m_pd.c m_class.c m_obj.c m_atom.c m_memory.c m_binbuf.c \
    m_conf.c m_glob.c m_sched.c \
    s_main.c s_inter.c s_print.c \
    s_loader.c s_path.c s_entry.c s_audio.c s_midi.c s_net.c s_utf8.c \
    s_audio_paring.c \
    d_ugen.c d_ctl.c d_arithmetic.c d_osc.c d_filter.c d_dac.c d_misc.c \
    d_math.c d_fft.c d_fft_fftsg.c d_array.c d_global.c \
    d_delay.c d_resample.c d_soundfile.c d_soundfile_aiff.c d_soundfile_caf.c \
    d_soundfile_next.c d_soundfile_wave.c \
    x_arithmetic.c x_connective.c x_interface.c x_midi.c x_misc.c \
    x_time.c x_acoustics.c x_net.c x_text.c x_gui.c x_list.c x_array.c \
    x_file.c x_scalar.c  x_vexp.c x_vexp_if.c x_vexp_fun.c \

SRC= $(PDSRC) \
    x_libpdreceive.o s_audio_dummy.o s_midi_dummy.o \
    z_hooks.o z_libpd.o z_print_util.o z_queued.o z_ringbuffer.o \
    bob~.o bonk~.o choice.o fiddle~.o loop~.o lrshift~.o pique.o sigmund~.o \
    pd~.o stdout.o

OBJ = $(SRC:.c=.o)

libpd.so: $(OBJ) ; \
   cc -o libpd.so $(OBJ) \
    -shared -Wl,-Bsymbolic -ldl  -lm -lpthread

clean: ; -rm -f *.o libpd.so

