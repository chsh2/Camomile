#N canvas 555 56 522 540 12;
#X floatatom 53 293 0 0 1000 0 - - -;
#X text 107 348 signal input (delay time in ms);
#X text 191 381 creation argument: name of delay line;
#X text 48 489 see also:;
#X obj 124 489 delwrite~;
#X obj 201 488 delread~;
#X obj 38 16 delread4~;
#X text 48 89 delread4~ implements a 4-point interpolating delay tap
from a corresponding delwrite~ object. The delay in milliseconds of
the tap is specified by the incoming signal., f 60;
#X obj 40 55 vd~;
#X text 304 487 updated for Pd version 0.47;
#X text 48 141 The delay time is always at least one sample and at
most the length of the delay line (specified by a corresponding delwrite~).
In addition \, in case the delwrite~ runs later in the DSP loop than
the delread4~ \, the delay is constrained below by one vector length
(64 samples.) An example showing how to control this to obtain very
short delays is included in doc/3.audio.examples/G05.execution.order.pd
;
#X obj 53 381 delread4~ \$0-delay;
#X obj 171 302 delwrite~ \$0-delay 1000;
#X obj 53 321 pack 0 1000;
#X obj 53 349 line~;
#X obj 171 277 osc~ 440;
#X msg 394 274 \; pd dsp 1;
#X msg 394 323 \; pd dsp 0;
#X obj 53 415 *~;
#X obj 53 444 dac~;
#X floatatom 125 409 5 0 100 0 - - -;
#X text 170 412 output level;
#X obj 125 431 / 1000;
#X text 113 13 - read a signal from a delay line at a variable delay
time (4-point-interpolation), f 44;
#X text 73 56 - old \, slightly rude synonym;
#X connect 0 0 13 0;
#X connect 11 0 18 0;
#X connect 13 0 14 0;
#X connect 14 0 11 0;
#X connect 15 0 12 0;
#X connect 18 0 19 0;
#X connect 18 0 19 1;
#X connect 20 0 22 0;
#X connect 22 0 18 1;
